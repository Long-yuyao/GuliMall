<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="gulimember.dao.UserLevelDao">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="gulimember.entity.UserLevelEntity" id="userLevelMap">
        <result property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="growthPoint" column="growth_point"/>
        <result property="defaultStatus" column="default_status"/>
        <result property="freeFreightPoint" column="free_freight_point"/>
        <result property="commentGrowthPoint" column="comment_growth_point"/>
        <result property="priviledgeFreeFreight" column="priviledge_free_freight"/>
        <result property="priviledgeMemberPrice" column="priviledge_member_price"/>
        <result property="priviledgeBirthday" column="priviledge_birthday"/>
        <result property="remark" column="remark"/>
    </resultMap>

	<select id="queryObject" resultType="gulimember.entity.UserLevelEntity">
		select * from ums_user_level where id = #{value}
	</select>

	<select id="queryList" resultType="gulimember.entity.UserLevelEntity">
		select * from ums_user_level
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from ums_user_level 
	</select>
	 
	<insert id="save" parameterType="gulimember.entity.UserLevelEntity" useGeneratedKeys="true" keyProperty="id">
		insert into ums_user_level
		(
			`name`, 
			`growth_point`, 
			`default_status`, 
			`free_freight_point`, 
			`comment_growth_point`, 
			`priviledge_free_freight`, 
			`priviledge_member_price`, 
			`priviledge_birthday`, 
			`remark`
		)
		values
		(
			#{name}, 
			#{growthPoint}, 
			#{defaultStatus}, 
			#{freeFreightPoint}, 
			#{commentGrowthPoint}, 
			#{priviledgeFreeFreight}, 
			#{priviledgeMemberPrice}, 
			#{priviledgeBirthday}, 
			#{remark}
		)
	</insert>
	 
	<update id="updatee" parameterType="gulimember.entity.UserLevelEntity">
		update ums_user_level 
		<set>
			<if test="name != null">`name` = #{name}, </if>
			<if test="growthPoint != null">`growth_point` = #{growthPoint}, </if>
			<if test="defaultStatus != null">`default_status` = #{defaultStatus}, </if>
			<if test="freeFreightPoint != null">`free_freight_point` = #{freeFreightPoint}, </if>
			<if test="commentGrowthPoint != null">`comment_growth_point` = #{commentGrowthPoint}, </if>
			<if test="priviledgeFreeFreight != null">`priviledge_free_freight` = #{priviledgeFreeFreight}, </if>
			<if test="priviledgeMemberPrice != null">`priviledge_member_price` = #{priviledgeMemberPrice}, </if>
			<if test="priviledgeBirthday != null">`priviledge_birthday` = #{priviledgeBirthday}, </if>
			<if test="remark != null">`remark` = #{remark}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="deletee">
		delete from ums_user_level where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from ums_user_level where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>