<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="gulimember.dao.UserCollectSkuDao">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="gulimember.entity.UserCollectSkuEntity" id="userCollectSkuMap">
        <result property="id" column="id"/>
        <result property="userId" column="user_id"/>
        <result property="skuId" column="sku_id"/>
        <result property="skuTitle" column="sku_title"/>
        <result property="skuImage" column="sku_image"/>
        <result property="createTime" column="create_time"/>
    </resultMap>

	<select id="queryObject" resultType="gulimember.entity.UserCollectSkuEntity">
		select * from ums_user_collect_sku where id = #{value}
	</select>

	<select id="queryList" resultType="gulimember.entity.UserCollectSkuEntity">
		select * from ums_user_collect_sku
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from ums_user_collect_sku 
	</select>
	 
	<insert id="save" parameterType="gulimember.entity.UserCollectSkuEntity">
		insert into ums_user_collect_sku
		(
			`id`, 
			`user_id`, 
			`sku_id`, 
			`sku_title`, 
			`sku_image`, 
			`create_time`
		)
		values
		(
			#{id}, 
			#{userId}, 
			#{skuId}, 
			#{skuTitle}, 
			#{skuImage}, 
			#{createTime}
		)
	</insert>
	 
	<update id="updatee" parameterType="gulimember.entity.UserCollectSkuEntity">
		update ums_user_collect_sku 
		<set>
			<if test="userId != null">`user_id` = #{userId}, </if>
			<if test="skuId != null">`sku_id` = #{skuId}, </if>
			<if test="skuTitle != null">`sku_title` = #{skuTitle}, </if>
			<if test="skuImage != null">`sku_image` = #{skuImage}, </if>
			<if test="createTime != null">`create_time` = #{createTime}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="deletee">
		delete from ums_user_collect_sku where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from ums_user_collect_sku where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>