<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="gulimember.dao.UserAddressDao">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="gulimember.entity.UserAddressEntity" id="userAddressMap">
        <result property="id" column="id"/>
        <result property="userId" column="user_id"/>
        <result property="name" column="name"/>
        <result property="phone" column="phone"/>
        <result property="postCode" column="post_code"/>
        <result property="province" column="province"/>
        <result property="city" column="city"/>
        <result property="region" column="region"/>
        <result property="address" column="address"/>
        <result property="defaultStatus" column="default_status"/>
    </resultMap>

	<select id="queryObject" resultType="gulimember.entity.UserAddressEntity">
		select * from ums_user_address where id = #{value}
	</select>

	<select id="queryList" resultType="gulimember.entity.UserAddressEntity">
		select * from ums_user_address
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from ums_user_address 
	</select>
	 
	<insert id="save" parameterType="gulimember.entity.UserAddressEntity" useGeneratedKeys="true" keyProperty="id">
		insert into ums_user_address
		(
			`user_id`, 
			`name`, 
			`phone`, 
			`post_code`, 
			`province`, 
			`city`, 
			`region`, 
			`address`, 
			`default_status`
		)
		values
		(
			#{userId}, 
			#{name}, 
			#{phone}, 
			#{postCode}, 
			#{province}, 
			#{city}, 
			#{region}, 
			#{address}, 
			#{defaultStatus}
		)
	</insert>
	 
	<update id="updatee" parameterType="gulimember.entity.UserAddressEntity">
		update ums_user_address 
		<set>
			<if test="userId != null">`user_id` = #{userId}, </if>
			<if test="name != null">`name` = #{name}, </if>
			<if test="phone != null">`phone` = #{phone}, </if>
			<if test="postCode != null">`post_code` = #{postCode}, </if>
			<if test="province != null">`province` = #{province}, </if>
			<if test="city != null">`city` = #{city}, </if>
			<if test="region != null">`region` = #{region}, </if>
			<if test="address != null">`address` = #{address}, </if>
			<if test="defaultStatus != null">`default_status` = #{defaultStatus}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="deletee">
		delete from ums_user_address where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from ums_user_address where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>