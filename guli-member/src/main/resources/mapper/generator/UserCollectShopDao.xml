<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="gulimember.dao.UserCollectShopDao">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="gulimember.entity.UserCollectShopEntity" id="userCollectShopMap">
        <result property="id" column="id"/>
        <result property="userId" column="user_id"/>
        <result property="shopId" column="shop_id"/>
        <result property="shopName" column="shop_name"/>
        <result property="shopLogo" column="shop_logo"/>
        <result property="createtime" column="createTime"/>
    </resultMap>

	<select id="queryObject" resultType="gulimember.entity.UserCollectShopEntity">
		select * from ums_user_collect_shop where id = #{value}
	</select>

	<select id="queryList" resultType="gulimember.entity.UserCollectShopEntity">
		select * from ums_user_collect_shop
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from ums_user_collect_shop 
	</select>
	 
	<insert id="save" parameterType="gulimember.entity.UserCollectShopEntity">
		insert into ums_user_collect_shop
		(
			`id`, 
			`user_id`, 
			`shop_id`, 
			`shop_name`, 
			`shop_logo`, 
			`createTime`
		)
		values
		(
			#{id}, 
			#{userId}, 
			#{shopId}, 
			#{shopName}, 
			#{shopLogo}, 
			#{createtime}
		)
	</insert>
	 
	<update id="updatee" parameterType="gulimember.entity.UserCollectShopEntity">
		update ums_user_collect_shop 
		<set>
			<if test="userId != null">`user_id` = #{userId}, </if>
			<if test="shopId != null">`shop_id` = #{shopId}, </if>
			<if test="shopName != null">`shop_name` = #{shopName}, </if>
			<if test="shopLogo != null">`shop_logo` = #{shopLogo}, </if>
			<if test="createtime != null">`createTime` = #{createtime}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="deletee">
		delete from ums_user_collect_shop where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from ums_user_collect_shop where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>