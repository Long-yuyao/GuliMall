<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.yuyao.guliproduct.dao.BrandDao">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="com.yuyao.guliproduct.entity.BrandEntity" id="brandMap">
        <result property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="logo" column="logo"/>
        <result property="status" column="status"/>
        <result property="firstLetter" column="first_letter"/>
        <result property="sort" column="sort"/>
        <result property="remark" column="remark"/>
    </resultMap>

	<select id="queryObject" resultType="com.yuyao.guliproduct.entity.BrandEntity">
		select * from pms_brand where id = #{value}
	</select>

	<select id="queryList" resultType="com.yuyao.guliproduct.entity.BrandEntity">
		select * from pms_brand
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from pms_brand 
	</select>
	 
	<insert id="save" parameterType="com.yuyao.guliproduct.entity.BrandEntity" useGeneratedKeys="true" keyProperty="id">
		insert into pms_brand
		(
			`name`, 
			`logo`, 
			`status`, 
			`first_letter`, 
			`sort`, 
			`remark`
		)
		values
		(
			#{name}, 
			#{logo}, 
			#{status}, 
			#{firstLetter}, 
			#{sort}, 
			#{remark}
		)
	</insert>
	 
	<update id="proupdate" parameterType="com.yuyao.guliproduct.entity.BrandEntity">
		update pms_brand 
		<set>
			<if test="name != null">`name` = #{name}, </if>
			<if test="logo != null">`logo` = #{logo}, </if>
			<if test="status != null">`status` = #{status}, </if>
			<if test="firstLetter != null">`first_letter` = #{firstLetter}, </if>
			<if test="sort != null">`sort` = #{sort}, </if>
			<if test="remark != null">`remark` = #{remark}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="prodelete">
		delete from pms_brand where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from pms_brand where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>